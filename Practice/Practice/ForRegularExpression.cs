using System;
using System.Text.RegularExpressions;

namespace Practice
{
    public class ForRegularExpression
    {
        public void RegularExpressionMethod()
        {
            string s = "Бык Тупогуб, Тупогубенький бычок, у быка губа бела была тупа";
            Regex regex = new Regex(@"туп(\w*)", RegexOptions.IgnoreCase);
            MatchCollection matches = regex.Matches(s);
            if (matches.Count > 0)
            {
                foreach (Match match in matches)
                    Console.WriteLine(match.Value);
            }
            else
            {
                Console.WriteLine("Совпадений не найдено");
            }
        }
        /* Параметр RegexOptions
         *  Compiled: при установке этого значения регулярное выражение компилируется в сборку, что обеспечивает более быстрое выполнение

            CultureInvariant: при установке этого значения будут игнорироваться региональные различия

            IgnoreCase: при установке этого значения будет игнорироваться регистр

            IgnorePatternWhitespace: удаляет из строки пробелы и разрешает комментарии, начинающиеся со знака #

            Multiline: указывает, что текст надо рассматривать в многострочном режиме. При таком режиме символы "^" и "$" совпадают, соответственно, с началом и концом любой строки, а не с началом и концом всего текста

            RightToLeft: приписывает читать строку справа налево

            Singleline: устанавливает однострочный режим, а весь текст рассматривается как одна строка
         */

        /* Синтаксис регулярных выражений
           * ^: соответствие должно начинаться в начале строки (например, выражение @"^пр\w*" соответствует слову "привет" в строке "привет мир")

            $: конец строки (например, выражение @"\w*ир$" соответствует слову "мир" в строке "привет мир", так как часть "ир" находится в самом конце)

            .: знак точки определяет любой одиночный символ (например, выражение "м.р" соответствует слову "мир" или "мор")

            *: предыдущий символ повторяется 0 и более раз

            +: предыдущий символ повторяется 1 и более раз

            ?: предыдущий символ повторяется 0 или 1 раз

            \s: соответствует любому пробельному символу

            \S: соответствует любому символу, не являющемуся пробелом

            \w: соответствует любому алфавитно-цифровому символу 
                - найти все слова, которые имеют корень "туп" и после которого может стоять различное количество символов

            \W: соответствует любому не алфавитно-цифровому символу

            \d: соответствует любой десятичной цифре

            \D : соответствует любому символу, не являющемуся десятичной цифрой
         */


    }
}